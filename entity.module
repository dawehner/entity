<?php

use Drupal\Core\Database\Query\Select;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
use Drupal\entity\Query\SqlQueryAlter;

/**
 * @file
 * Provides expanded entity APIs.
 */

/**
 * Implements hook_query_TAG_alter().
 *
 * Enables to take into account query_access handlers for entity queries.
 */
function entity_query_entity_query_alter(Select $query) {
  $entity_type_id = $query->getMetaData('entity_type');
  if (!$query->hasTag($entity_type_id . '_access')) {
    return;
  }

  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_type = $entity_type_manager->getDefinition($entity_type_id);
  _entity_query_alter($query, $entity_type);
}

/**
 * Shared alter function between entity queries and views queries.
 *
 * @param \Drupal\Core\Database\Query\Select $query
 *   The select query we alter.
 * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
 *   The entity type we deal with.
 */
function _entity_query_alter(Select $query, EntityTypeInterface $entity_type) {
  $entity_type_id = $entity_type->id();
  $entity_type_manager = \Drupal::entityTypeManager();
  $current_user = \Drupal::currentUser();

  $storage = $entity_type_manager->getStorage($entity_type_id);
  if (!$storage instanceof SqlContentEntityStorage) {
    return;
  }
  $table_mapping = $storage->getTableMapping();

  if ($entity_type->hasHandlerClass('query_access')) {
    /** @var \Drupal\entity\Query\QueryAccessHandlerInterface $query_access */
    $query_access = $entity_type_manager->getHandler($entity_type_id, 'query_access');
    $condition = $query_access->conditions('view', $current_user);

    $sql_condition = $query->andConditionGroup();
    if (count($condition)) {
      $sql_query_alter = new SqlQueryAlter(\Drupal::service('entity_field.manager'));
      $sql_condition = $sql_query_alter->applyCondition($entity_type, $table_mapping, $query, $sql_condition, $condition);

      $query->condition($sql_condition);
    }
  }
}

/**
 * Implements hook_query_TAG_alter().
 */
function entity_query_views_alter(Select $select) {
  if ($entity_type = _entity_get_entity_type_id_from_table(reset($select->getTables())['table'])) {

    _entity_query_alter($select, $entity_type);
  }
}

/**
 * Determine the entity type of a query based upon the table name.
 *
 * @param string $table_name
 *   The table name.
 *
 * @return \Drupal\Core\Entity\EntityTypeInterface|null
 *   The entity type or NULL, if we couldn't find it.
 */
function _entity_get_entity_type_id_from_table($table_name) {
  foreach (\Drupal::entityTypeManager()->getDefinitions() as $entity_type) {
    if ($entity_type->getBaseTable() === $table_name || $entity_type->getDataTable() === $table_name || $entity_type->getRevisionTable() === $table_name || $entity_type->getRevisionDataTable() === $table_name) {
      return $entity_type;
    }
  }
  return NULL;
}
